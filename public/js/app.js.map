{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["\n(function($){\n\n    var original_title = document.title;\n    var nCount = 0;\n\n    var PHPHub = {\n        init: function(){\n            var self = this;\n            $(document).pjax('a:not(a[target=\"_blank\"])', 'body');\n            $(document).on('pjax:start', function() {\n                NProgress.start();\n            });\n            $(document).on('pjax:end', function() {\n                NProgress.done();\n                self.siteBootUp();\n            });\n            $(document).on('pjax:complete', function() {\n                original_title = document.title;\n                NProgress.done();\n                self._resetTitle();\n            });\n\n            self.siteBootUp();\n            self.initLightBox();\n            self.initNotificationsCount();\n        },\n\n        /*\n        * Things to be execute when normal page load\n        * and pjax page load.\n        */\n        siteBootUp: function(){\n            var self = this;\n            self.initExternalLink();\n            self.initTimeAgo();\n            self.initEmoji();\n            self.initAutocompleteAtUser();\n            self.initScrollToTop();\n            self.initTextareaAutoResize();\n            self.initHeightLight();\n            self.initLocalStorage();\n            self.initEditorPreview();\n            self.initReplyOnPressKey();\n            self.initDeleteForm();\n            self.initInlineAttach();\n            self.snowing();\n            self.forceImageDataType();\n            self.initToolTips();\n        },\n\n        /**\n         * Open External Links In New Window\n         */\n        initExternalLink: function(){\n            $('a[href^=\"http://\"], a[href^=\"https://\"]').each(function() {\n               var a = new RegExp('/' + window.location.host + '/');\n               if(!a.test(this.href) ) {\n                   $(this).click(function(event) {\n                       event.preventDefault();\n                       event.stopPropagation();\n                       window.open(this.href, '_blank');\n                   });\n               }\n            });\n        },\n\n        /**\n         * Automatically transform any Date format to human\n         * friendly format, all you need to do is add a\n         * `.timeago` class.\n         */\n        initTimeAgo: function(){\n            moment.lang('zh-cn');\n            $('.timeago').each(function(){\n                var time_str = $(this).text();\n                if(moment(time_str, \"YYYY-MM-DD HH:mm:ss\", true).isValid()) {\n                    $(this).text(moment(time_str).fromNow());\n                }\n            });\n        },\n\n        /**\n         * Enable emoji everywhere.\n         */\n        initEmoji: function(){\n            emojify.setConfig({\n                img_dir : Config.cdnDomain + 'assets/images/emoji',\n                ignored_tags : {\n                    'SCRIPT'  : 1,\n                    'TEXTAREA': 1,\n                    'A'       : 1,\n                    'PRE'     : 1,\n                    'CODE'    : 1\n                }\n            });\n            emojify.run();\n\n            $('#reply_content').textcomplete([\n                { // emoji strategy\n                    match: /\\B:([\\-+\\w]*)$/,\n                    search: function (term, callback) {\n                        callback($.map(emojies, function (emoji) {\n                            return emoji.indexOf(term) === 0 ? emoji : null;\n                        }));\n                    },\n                    template: function (value) {\n                        return '<img src=\"' + Config.cdnDomain + 'assets/images/emoji/' + value + '.png\"></img>' + value;\n                    },\n                    replace: function (value) {\n                        return ':' + value + ': ';\n                    },\n                    index: 1,\n                    maxCount: 5\n                }\n            ]);\n        },\n\n        /**\n         * Autocomplete @user\n         */\n        initAutocompleteAtUser: function() {\n            var at_users = [],\n                  user;\n            $users = $('.media-heading').find('a.author');\n            for (var i = 0; i < $users.length; i++) {\n                user = $users.eq(i).text().trim();\n                if ($.inArray(user, at_users) == -1) {\n                    at_users.push(user);\n                };\n            };\n\n            $('textarea').textcomplete([{\n                mentions: at_users,\n                match: /\\B@(\\w*)$/,\n                search: function(term, callback) {\n                    callback($.map(this.mentions, function(mention) {\n                        return mention.indexOf(term) === 0 ? mention : null;\n                    }));\n                },\n                index: 1,\n                replace: function(mention) {\n                    return '@' + mention + ' ';\n                }\n            }], {\n                appendTo: 'body'\n            });\n\n        },\n\n        /**\n         * Autoresizing the textarea when you typing.\n         */\n        initTextareaAutoResize: function(){\n            $('textarea').autosize();\n        },\n\n        /**\n         * Scroll to top in one click.\n         */\n        initScrollToTop: function(){\n            $.scrollUp.init();\n        },\n\n        /**\n         * Code heightlight.\n         */\n        initHeightLight: function(){\n            Prism.highlightAll();\n        },\n\n        /**\n         * lightbox\n         */\n        initLightBox: function(){\n            $(document).delegate('.content-body img:not(.emoji)', 'click', function(event) {\n                event.preventDefault();\n                return $(this).ekkoLightbox({\n                    onShown: function() {\n                        if (window.console) {\n                            // return console.log('Checking our the events huh?');\n                        }\n                    }\n                });\n            });\n        },\n\n        /**\n         * do content preview\n         */\n        runPreview: function() {\n            var replyContent = $(\"#reply_content\");\n            var oldContent = replyContent.val();\n\n            if (oldContent) {\n                marked(oldContent, function (err, content) {\n                  $('#preview-box').html(content);\n                  emojify.run(document.getElementById('preview-box'));\n                });\n            }\n        },\n\n        /**\n         * Init post content preview\n         */\n        initEditorPreview: function() {\n            var self = this;\n            $(\"#reply_content\").focus(function(event) {\n                $(\"#reply_notice\").fadeIn(1500);\n                $(\"#preview-box\").fadeIn(1500);\n                $(\"#preview-lable\").fadeIn(1500);\n\n                if (!$(\"#reply_content\").val()) {\n                    $(\"html, body\").animate({ scrollTop: $(document).height()}, 1800);\n                }\n            });\n            $('#reply_content').keyup(function(){\n                self.runPreview();\n            });\n        },\n\n        /**\n         * Notify user unread notifications when they stay on the\n         * page for too long.\n         */\n        initNotificationsCount: function(argumen) {\n            var self = this;\n            if (Config.user_id > 0) {\n                function scheduleGetNotification(){\n                    $.get( Config.routes.notificationsCount, function( data ) {\n\n                        nCount = parseInt(data);\n                        self._resetTitle();\n                        setTimeout(scheduleGetNotification, 15000);\n                    });\n                };\n                setTimeout(scheduleGetNotification, 15000);\n            }\n        },\n\n        _resetTitle: function() {\n            if (nCount > 0) {\n                $('#notification-count').text(nCount);\n                $('#notification-count').hasClass('badge-important') || $('#notification-count').addClass('badge-important');\n                document.title = '(' + nCount + ') '+ original_title;\n            } else {\n                document.title =  original_title;\n                $('#notification-count').text(0);\n                $('#notification-count').addClass('badge-fade');\n                $('#notification-count').removeClass('badge-important');\n            }\n        },\n\n        /*\n         * Use Ctrl + Enter for reply\n         */\n        initReplyOnPressKey: function() {\n            $(document).on(\"keydown\", \"#reply_content\", function(e)\n            {\n                if ((e.keyCode == 10 || e.keyCode == 13) && e.ctrlKey) {\n                    $(this).parents(\"form\").submit();\n                    return false;\n                }\n            });\n        },\n\n        /*\n         * Construct a form when using the following code, makes more clean code.\n         *   {{ link_to_route('tasks.destroy', 'D', $task->id, ['data-method'=>'delete']) }}\n         * See this answer: http://stackoverflow.com/a/23082278/689832\n         */\n        initDeleteForm: function() {\n            $('[data-method]').append(function(){\n                return \"\\n\"+\n                \"<form action='\"+$(this).attr('data-url')+\"' method='POST' style='display:none'>\\n\"+\n                \"   <input type='hidden' name='_method' value='\"+$(this).attr('data-method')+\"'>\\n\"+\n                \"   <input type='hidden' name='_token' value='\"+Config.token+\"'>\\n\"+\n                \"</form>\\n\"\n                })\n                .attr('style','cursor:pointer;')\n                .click(function() {\n                    if ($(this).attr('data-method') == 'post') {\n                        $(this).find(\"form\").submit();\n                    }\n                    if ($(this).attr('data-method') == 'delete' && confirm(\"Are you sure want to proceed?\")) {\n                        $(this).find(\"form\").submit();\n                    }\n                });\n           // attr('onclick',' if (confirm(\"Are you sure want to proceed?\")) { $(this).find(\"form\").submit(); };');\n        },\n\n        /**\n         * Local Storage\n         */\n        initLocalStorage: function() {\n            var self = this;\n            $(\"#reply_content\").focus(function(event) {\n\n                // Topic Title ON Topic Creation View\n                localforage.getItem('topic-title', function(err, value) {\n                    if ($('.topic_create #topic-title').val() == '' && !err) {\n                        $('.topic_create #topic-title').val(value);\n                    };\n                });\n                $('.topic_create #topic-title').keyup(function(){\n                    localforage.setItem('topic-title', $(this).val());\n                });\n\n                // Topic Content ON Topic Creation View\n                localforage.getItem('topic_create_content', function(err, value) {\n                    if ($('.topic_create #reply_content').val() == '' && !err) {\n                        $('.topic_create #reply_content').val(value);\n                        self.runPreview();\n                    }\n                });\n                $('.topic_create #reply_content').keyup(function(){\n                    localforage.setItem('topic_create_content', $(this).val());\n                });\n\n                // Reply Content ON Topic Detail View\n                localforage.getItem('reply_content', function(err, value) {\n                    if ($('.topics-show #reply_content').val() == '' && !err) {\n                        $('.topics-show #reply_content').val(value);\n                        self.runPreview();\n                    }\n                });\n                $('.topics-show #reply_content').keyup(function(){\n                    localforage.setItem('reply_content', $(this).val());\n                });\n            })\n\n            // Clear Local Storage on submit\n            $(\"#topic-create-form\").submit(function(event){\n                localforage.removeItem('topic_create_content');\n                localforage.removeItem('topic-title');\n            });\n            $(\"#reply-form\").submit(function(event){\n                localforage.removeItem('reply_content');\n            });\n        },\n\n        /**\n         * Upload image\n         */\n        initInlineAttach: function() {\n            var self = this;\n            $('#reply_content').inlineattach({\n                uploadUrl: Config.routes.upload_image,\n                extraParams: {\n                  '_token': Config.token,\n                },\n                onUploadedFile: function(response) {\n                    setTimeout(self.runPreview, 200);\n                },\n            });\n        },\n\n        /**\n         * Snowing around the world\n         */\n        snowing: function() {\n\n            // only show snow in Christmas\n            var today = new Date()\n            var christmas = new Date(today.getFullYear(), 11, 25) // Month is 0-11 in JavaScript\n            if (today.getMonth() == 11 && (today.getDate() > 22 && today.getDate() < 30))\n            {\n                $('#body').snowfall({\n                    flakeCount: 100,\n                    minSize: 2,\n                    maxSize:5,\n                    round: true\n                });\n            }\n        },\n\n        /**\n         * Force image data type, fixing the \"Could not detect remote target type...\"\n         * problem.\n         */\n        forceImageDataType: function() {\n          $('.content-body img:not(.emoji)').each(function(){\n              $(this).attr('data-type', 'image');\n          });\n        },\n\n        initToolTips: function() {\n          $('[data-toggle=\"tooltip\"]').tooltip();\n        },\n\n    }\n    window.PHPHub = PHPHub;\n})(jQuery);\n\n$(document).ready(function()\n{\n    PHPHub.init();\n});\n\n// reply a reply\nfunction replyOne(username){\n    replyContent = $(\"#reply_content\");\n    oldContent = replyContent.val();\n    prefix = \"@\" + username + \" \";\n    newContent = ''\n    if(oldContent.length > 0){\n        if (oldContent != prefix) {\n            newContent = oldContent + \"\\n\" + prefix;\n        }\n    } else {\n        newContent = prefix\n    }\n    replyContent.focus();\n    replyContent.val(newContent);\n    moveEnd($(\"#reply_content\"));\n}\n\nvar moveEnd = function(obj){\n  obj.focus();\n\n  var len = obj.value === undefined ? 0 : obj.value.length;\n\n  if (document.selection) {\n    var sel = obj.createTextRange();\n    sel.moveStart('character',len);\n    sel.collapse();\n    sel.select();\n  } else if (typeof obj.selectionStart == 'number' && typeof obj.selectionEnd == 'number') {\n    obj.selectionStart = obj.selectionEnd = len;\n  }\n}\n"],"sourceRoot":"/source/"}